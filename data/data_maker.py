file = open("ram_init.coe", "w")

MaxSize = 1024

print('''memory_initialization_radix=2;
memory_initialization_vector=''', file=file)

data = ["001000_00000_00000_0000000000001010",      # addi r0 r0 000a       r0 : 0      ->  000a
        "001000_00001_00001_0000000000000001",      # addi r1 r1 0001       r1 : 0      ->  0001
        "001000_00010_00010_0000000000000001",      # addi r2 r2 0001       r2 : 0      ->  0001
        "001000_00011_00011_0000000000000010",      # addi r3 r3 0002       r3 : 0      ->  0002
        "001000_00100_00100_0000000000000011",      # addi r4 r4 0003       r4 : 0      ->  0003
        
        "000000_00010_00011_00101_00000_100000",    # add  r2 r3 r5         r5 <= r1 + r2
        "000000_00010_00010_00001_00000_100101",    # or   r2 r2 r1         r1 <= r2
        "000000_00011_00011_00010_00000_100101",    # or   r3 r3 r2         r2 <= r3
        "000000_00101_00101_00011_00000_100101",    # or   r5 r5 r3         r3 <= r5
        
        "001000_00100_00100_0000000000000001",      # addi r4 r4 0001       r4 <= r4 + 1
        "000100_00000_00100_0000000000000001",      # beq  r0 r4 0001       if (r0 == r4) pc <= pc + 1
        "000010_00000000000000000000000101",        # j    5                j 5
        
        "000000_00000_00000_00000_00000_100110",    # xor  r0 r0 r0         r0 <= 0
        "101011_00000_00011_0000_0000_1000_0000",   # sw r0 r3 80       
        "100011_00000_00000_0000_0000_1000_0000",   # lw r0 r0 80
        ]

for i in range(MaxSize):
    if (i < len(data)):
        print(data[i].replace('_', ''), end='', file=file)
    else:
        print("0", end='', file=file)
    
    if (i == MaxSize - 1):
        print(';', file=file)
    else:
        print(',', file=file)